{"version":3,"sources":["Post.js","Posts.js","AddPost.js","App.js","reportWebVitals.js","index.js"],"names":["Post","props","useState","detail","setDetail","bodyStyle","display","className","selectedCategory","post","category","title","style","margin","onClick","e","deletePost","id","body","Posts","posts","useContext","PostContext","map","addBtn","marginLeft","height","width","inputStyle","AddPost","addPost","setTitle","setBody","newPost","setNewPost","addRef","useRef","useEffect","current","focus","onSubmit","preventDefault","type","placeholder","onChange","target","value","ref","React","createContext","categories","msgStyle","fontSize","App","setPosts","loading","setLoading","error","setError","setSelectedCategory","getPosts","a","axios","get","response","console","log","data","somePosts","Math","floor","random","handleOptionChange","length","name","checked","Provider","filter","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05985bc6.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction Post(props) {\r\n\r\n    const [detail, setDetail] = useState(false);\r\n\r\n    const showDetails = (e) => {\r\n        setDetail(!detail);\r\n    }\r\n\r\n    const bodyStyle = {\r\n\r\n        display: detail ? 'inline' : 'none'\r\n    }\r\n\r\n    return (\r\n        <div className='todoStyle'>  \r\n            \r\n            {props.selectedCategory === '' || props.selectedCategory === props.post.category ? (\r\n                <div>    \r\n                    <span>{props.post.title}</span>\r\n                    <span style={{margin: '1%'}}><b>{props.post.category}</b></span><br/>\r\n                    <button onClick={showDetails}><b>Details</b></button>\r\n                    <button className='btnStyle' onClick={()=>props.deletePost(props.post.id)}><b>Delete</b></button>\r\n                    <br/><p style={bodyStyle}>{props.post.body}</p>\r\n                    <hr/>\r\n                </div>\r\n            ): (\r\n                <span></span>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, {useContext} from 'react'\r\nimport Post from './Post';\r\nimport {PostContext} from './App'\r\n\r\nfunction Posts({deletePost, selectedCategory}) {\r\n    const posts = useContext(PostContext);\r\n    return (\r\n        <div>\r\n            {posts.map((post) => \r\n                <Post post={post} deletePost={deletePost}  selectedCategory={selectedCategory}/>   \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport './App.css';\r\n\r\nfunction AddPost({addPost}) {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const [newPost, setNewPost] = useState(null);\r\n    const addRef = useRef()\r\n\r\n    useEffect(() => {\r\n        addRef.current.focus()\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!title)\r\n            return\r\n        \r\n        const postData = {\r\n            title,\r\n            body\r\n        }\r\n\r\n        setNewPost(postData)\r\n\r\n        if(newPost == null)\r\n            return\r\n\r\n        addPost(newPost)\r\n        setNewPost(null);\r\n        setTitle(\"\");\r\n        setBody(\"\");\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"Enter title of post...\" onChange={(e) => setTitle(e.target.value)}  \r\n                       value={title}  style={inputStyle} ref={addRef} />\r\n            <input type=\"text\" placeholder=\"Enter details about post...\" onChange={(e) => setBody(e.target.value)}  \r\n                       value={body}  style={inputStyle} />\r\n            <button style={addBtn} type='submit'><b>Add</b></button> \r\n        </form>\r\n    )\r\n}\r\n\r\nconst addBtn = {\r\n    marginLeft:'10px',\r\n    height: '25px',\r\n    width: '55px'\r\n}\r\n\r\nconst inputStyle ={\r\n    width: '400px',\r\n    height:'22px'\r\n}\r\n\r\nexport default AddPost;\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Posts from './Posts'\nimport AddPost from './AddPost'\n\n\nexport const PostContext = React.createContext();\n\nconst categories = ['category1', 'category2', 'category3', 'category4']\n\nfunction App() {\n  \n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState('')\n\n  useEffect(() => {\n    getPosts();\n  },[])\n\n  const getPosts = async () => {\n    setLoading(true);\n    try{\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/posts?_limit=10`)\n      console.log(response.data)\n      const data = response.data\n      //setPosts(response.data);\n      //adding an extra attribute of category to each post\n      const somePosts = data.map(data => { return { ...data, category: categories[Math.floor(Math.random()*4)] }})\n      //setPosts([...posts, {category: categories[Math.floor(Math.random()*4)]}])\n      setPosts(somePosts);\n\n    }\n    catch(err){\n      setError(err)\n    }\n    setLoading(false);\n  }\n\n  const handleOptionChange = (e) => {\n    console.log('change')\n    console.log(e.target.value)\n    setSelectedCategory(e.target.value)\n    \n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    setSelectedCategory('')\n  }\n\n  const deletePost = (id) => {\n    //console.log(id);\n    setPosts(posts.filter(post => post.id !== id));\n  }\n\n  const addPost = (post) => {\n    console.log(\"add post\")\n    setPosts([...posts, {id: posts.length + 1, title:post.title, body:post.body, category:'category1' }])\n  }\n\n  return (\n    <div>\n      <h1>Posts</h1>\n      \n      <AddPost addPost={addPost} />\n\n      <form onSubmit={handleFormSubmit}>\n        <input type='radio' name='scategory' value='category1' checked={selectedCategory === 'category1'}\n                onChange={handleOptionChange}/> Category 1 <br/>\n        <input type='radio' name='scategory' value='category2' checked={selectedCategory === 'category2'}\n                onChange={handleOptionChange}/> Category 2 <br/>\n        <input type='radio' name='scategory' value='category3' checked={selectedCategory === 'category3'}\n                onChange={handleOptionChange}/> Category 3 <br/>\n        <input type='radio' name='scategory' value='category4' checked={selectedCategory === 'category4'}\n                onChange={handleOptionChange}/> Category 4 <br/>\n        <button type='submit'>Clear Selection</button>\n      </form>\n\n      {console.log('categories')}\n\n      <PostContext.Provider value={posts}>\n        { loading ? ( <div style={msgStyle}><b>Loading Posts...</b></div> )\n                  : (<Posts deletePost={deletePost} selectedCategory={selectedCategory} /> )}\n      </PostContext.Provider>\n\n      {error && <div style={msgStyle}><b>{error.message}</b></div>}\n\n    </div>\n  );\n}\n\nconst msgStyle = {\n  margin: '20px',\n  fontSize: '20px'\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}